@* Error Display Component - Shows error messages with retry options *@

<div class="error-display-card card border-danger shadow-sm">
    <div class="card-body text-center p-4">
        <div class="error-icon mb-3">
            <i class="bi bi-exclamation-triangle-fill text-danger" style="font-size: 3rem;"></i>
        </div>
        
        <h5 class="card-title text-danger mb-3">Wystąpił błąd</h5>
        
        <p class="card-text text-muted mb-4">
            @ErrorMessage
        </p>
        
        <div class="d-flex gap-2 justify-content-center">
            <button class="btn btn-outline-primary" 
                    type="button" 
                    @onclick="HandleRetryClick">
                <i class="bi bi-arrow-repeat me-1"></i>
                Spróbuj ponownie
            </button>
            
            <button class="btn btn-outline-secondary" 
                    type="button" 
                    @onclick="HandleGoHomeClick">
                <i class="bi bi-house me-1"></i>
                Powrót do strony głównej
            </button>
        </div>
    </div>
</div>

<link href="~/css/diagnostic-components.css" rel="stylesheet" />

@code {
    /// <summary>
    /// Error message to display to user
    /// </summary>
    [Parameter]
    public string? ErrorMessage { get; set; }
    
    /// <summary>
    /// Callback for retry action
    /// </summary>
    [Parameter]
    public EventCallback OnRetry { get; set; }
    
    /// <summary>
    /// Callback for go home action
    /// </summary>
    [Parameter]
    public EventCallback OnGoHome { get; set; }
    
    private async Task HandleRetryClick()
    {
        if (OnRetry.HasDelegate)
        {
            await OnRetry.InvokeAsync();
        }
    }
    
    private async Task HandleGoHomeClick()
    {
        if (OnGoHome.HasDelegate)
        {
            await OnGoHome.InvokeAsync();
        }
    }
} 